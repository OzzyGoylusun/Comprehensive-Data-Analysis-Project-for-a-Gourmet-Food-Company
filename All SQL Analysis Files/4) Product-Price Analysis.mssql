
--4. Product-Price Analysis


--CASE 4.1: What are the following pieces of information that shall drive the company's annual pricing strategy, requested by the Product Team?

-- * Product Name
-- * Unit Price
-- * Which price range each product could possible fall under
-- * How many products each product range encompasses

WITH PRODUCT_LIST_PRICE_CATEGORISATION AS
	(
		SELECT PRODUCT_NAME,
			UNIT_PRICE,
			DISCONTINUED,
			CASE WHEN UNIT_PRICE < 1 THEN 'Updates Necessary'
				 WHEN UNIT_PRICE BETWEEN 1 AND 9 THEN '1-9$'
	 			 WHEN UNIT_PRICE BETWEEN 10 AND 19 THEN '10-19$'
	             WHEN UNIT_PRICE BETWEEN 20 AND 34 THEN '20-34$'
	             WHEN UNIT_PRICE BETWEEN 35 AND 49 THEN '35-49$'
	             WHEN UNIT_PRICE BETWEEN 50 AND 99 THEN '50-99$'
	             ELSE 'More than 100$'
			END AS PRICE_RANGE
	 
		FROM PRODUCTS
	)
	
SELECT PRODUCT_NAME,
	UNIT_PRICE::NUMERIC(10,2),
	PRICE_RANGE,
	CASE WHEN DISCONTINUED = 1 THEN 'YES'
		 ELSE 'NO'
		 END AS PRODUCT_DISCONTINUED_OR_NOT,
		 
	COUNT(PRICE_RANGE) OVER(PARTITION BY PRICE_RANGE) AS NUMBER_OF_PRODUCTS_IN_THE_PRICE_RANGE
	
FROM PRODUCT_LIST_PRICE_CATEGORISATION



--CASE 4.2: What is the breakdown of each product's price changing date and the amounts to which each product price has been adjusted?

WITH IDENTIFICATON_OF_POTENTIAL_PRICE_CHANGES AS
	(
		SELECT PRODUCT_NAME,
			ORDER_DATE,
			OD.UNIT_PRICE,
			ROW_NUMBER() OVER(PARTITION BY PRODUCT_NAME, OD.UNIT_PRICE ORDER BY ORDER_DATE) AS FIRST_OF_PRICE_CHANGE_DATE
		FROM PRODUCTS AS P
		LEFT JOIN ORDER_DETAILS AS OD USING(PRODUCT_ID)
		LEFT JOIN ORDERS AS O USING(ORDER_ID)
	),
	
	PRODUCT_PRICE_CHANGES_AND_DATES AS
	(
		SELECT PRODUCT_NAME,
			ORDER_DATE,
			LAG(ORDER_DATE, 1, NULL) OVER(PARTITION BY PRODUCT_NAME ORDER BY ORDER_DATE) AS PREVIOUS_DATE,
			UNIT_PRICE AS NEW_UNIT_PRICE,
			LAG(UNIT_PRICE, 1, NULL) OVER(PARTITION BY PRODUCT_NAME ORDER BY ORDER_DATE) AS PREVIOUS_PRICE,
			FIRST_OF_PRICE_CHANGE_DATE,
			DENSE_RANK() OVER(PARTITION BY PRODUCT_NAME ORDER BY ORDER_DATE) AS FIRST_PRODUCT_STATUS
		
		FROM IDENTIFICATON_OF_POTENTIAL_PRICE_CHANGES
		WHERE FIRST_OF_PRICE_CHANGE_DATE = 1
		ORDER BY PRODUCT_NAME ASC, ORDER_DATE ASC
	)
	
SELECT DISTINCT ROW_NUMBER() OVER (PARTITION BY PRODUCT_NAME) AS PRICE_CHANGE_NUMBER_PER_PRODUCT,
	PRODUCT_NAME,
	ORDER_DATE AS PRICE_CHANGE_DATE,
	PREVIOUS_DATE AS FORMER_ORIGIN_DATE,
	NEW_UNIT_PRICE::NUMERIC(10,1),
	PREVIOUS_PRICE::NUMERIC(10,1)
	
FROM PRODUCT_PRICE_CHANGES_AND_DATES
WHERE (FIRST_PRODUCT_STATUS > 1)
	AND (FIRST_OF_PRICE_CHANGE_DATE = 1)
ORDER BY PRODUCT_NAME, ORDER_DATE
